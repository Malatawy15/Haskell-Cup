import java_cup.runtime.Symbol;

%%
%class Lexer

%implements java_cup.runtime.Scanner
%function next_token
%type java_cup.runtime.Symbol

%eofval{
	return new Symbol(sym.EOF, null);
%eofval}

%state COMMENT
%state BLK_COMMENT

KEYWORD=data|deriving|type|if|else|then|where|otherwise|True|False
DATA_TYPE=String|Bool|Integer|Int
FR=Show|Eq|Ord
ALPHA=[A-Za-z]
DIGIT=[0-9]
ALPHA_NUMERIC={ALPHA}|{DIGIT}
STRING=\"(.)*\"
IDENTIFIER={ALPHA}({ALPHA_NUMERIC})*
NUMBER=(([-])?{DIGIT})
WHITE_SPACE=([\ \n\r\t\f\b])+
%%

<YYINITIAL> "{-" {
  yybegin(BLK_COMMENT);
}

<BLK_COMMENT> -} {
  yybegin(YYINITIAL);
}

<BLK_COMMENT> - {
}

<BLK_COMMENT> } {
}

<BLK_COMMENT> [^-}] {
}

<YYINITIAL> "--" {
  yybegin(COMMENT);
}

<COMMENT> [^\n] {
}

<COMMENT> [\n] {
  yybegin(YYINITIAL);
}

<YYINITIAL> {KEYWORD} { 
  return "KW\t"+ yytext();
}

<YYINITIAL> {WHITE_SPACE} { 
}

<YYINITIAL> {DATA_TYPE} {
  return "DT\t"+ yytext();
}

<YYINITIAL> {NUMBER} {
  return "NM\t"+ yytext();
}

<YYINITIAL> {FR} {
  return "FR\t"+ yytext();
}

<YYINITIAL> {STRING} {
  return "ST\t"+ yytext();
}

<YYINITIAL> {IDENTIFIER} { 
  return "ID\t"+ yytext();
}

<YYINITIAL> "|" {
  return "BR\t|";
}

<YYINITIAL> "(" {
  return "LB\t(";
}

<YYINITIAL> ")" {
  return "RB\t)";
}

<YYINITIAL> "[]" { 
  return "EL\t[]"; 
}

<YYINITIAL> "[" {
  return "LS\t[";
}

<YYINITIAL> "]" {
  return "RS\t]";
}

<YYINITIAL> "{" {
  return "LC\t{";
}

<YYINITIAL> "}" {
  return "RC\t}";
}

<YYINITIAL> "," {
  return "FA\t,";
}

<YYINITIAL> ";" {
  return "SM\t;";
}

<YYINITIAL> "++" { 
  return "CN\t++"; 
}

<YYINITIAL> "==" { 
  return "EQ\t=="; 
}

<YYINITIAL> ">=" { 
  return "GE\t>="; 
}

<YYINITIAL> "<" { 
  return "LT\t<"; 
}

<YYINITIAL> "=" { 
  return "AO\t="; 
}

<YYINITIAL> "_" { 
  return "WC\t_"; 
}

<YYINITIAL> "+" { 
  return "PO\t+"; 
}

<YYINITIAL> "*" { 
  return "MB\t*"; 
}

<YYINITIAL> "-" { 
  return "MO\t-"; 
}

<YYINITIAL> "::" { 
  return "HT\t::"; 
}

<YYINITIAL> ":" { 
  return "CL\t:"; 
}

<YYINITIAL> "->" { 
  return "AR\t->"; 
}

<YYINITIAL> "=>" { 
  return "DA\t=>"; 
}

<YYINITIAL> "!!" { 
  return "FN\t!!"; 
}

<YYINITIAL> ".." { 
  return new Symbol(sym.RP, yytext()); 
}

<YYINITIAL> . { 
  return new Symbol(sym.error, "Error!"); 
}
